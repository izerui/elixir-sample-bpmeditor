<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////////
// Licensed Materials - Property of IBM
// 5724-Z78
// Â© Copyright IBM Corporation 2007, 2013. All Rights Reserved.
//
// Note to U.S. Government Users Restricted Rights:
// Use, duplication or disclosure restricted by GSA ADP Schedule
// Contract with IBM Corp.
///////////////////////////////////////////////////////////////////////////////
-->
<ibm:NodeSkinBase xmlns="http://ns.adobe.com/mxml/2009"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:ibm="http://www.ibm.com/xmlns/prod/ilog/elixir/diagram/2010"
        xmlns:bpmn="bpm.graphic.icons.*"
       >

  <Metadata>
    [HostComponent("bpm.graphic.StartEvent")]
  </Metadata> 
  
  <Declarations>
    <s:GlowFilter id="glowFilter" color="0x00FF00" strength="3" blurX="20" blurY="20"/>
    
    <s:AnimateFilter id="animateWaitEffect" 
                     target="{wait}"
                     repeatCount="0"
                     duration="250"
                     repeatBehavior="reverse"
                     bitmapFilter="{glowFilter}">
      <s:SimpleMotionPath property="alpha" valueFrom="0" valueTo="1"/>
    </s:AnimateFilter>
  </Declarations>

  <ibm:states>
    <s:State name="normal" />
    <s:State name="selected" stateGroups="Selected"/>
    <s:State name="normalAndShowsCaret" stateGroups="ShowsCaret"/>
    <s:State name="selectedAndShowsCaret" stateGroups="Selected,ShowsCaret"/>
    <s:State name="active"/>
    <s:State name="done"/>
  </ibm:states>
  
  <ibm:layout>
    <s:VerticalLayout gap="3" horizontalAlign="center" />
  </ibm:layout>


 
  <s:Group id="base">
    <s:filters>
      <s:GlowFilter includeIn="ShowsCaret" color="{caretColor}" alpha="0.8" blurX="8" blurY="8">
      </s:GlowFilter>
    </s:filters>    

     <!-- indicators for monitoring status -->
    <mx:SWFLoader id="wait" top="-16" right="-8" includeIn="active" source="@Embed(source='images/wait.svg')" height="16" width="16"
                  activate="{animateWaitEffect.play()}"
                  deactivate="{animateWaitEffect.stop()}"/>
    <mx:SWFLoader top="-16" right="-8" includeIn="done" source="@Embed(source='images/ok.svg')" height="16" width="16"/>

    <s:Ellipse id="ellipse" width="29" height="29" verticalCenter="0" horizontalCenter="0" >
      <s:fill>
      <s:LinearGradient rotation="-135" >
        <s:entries>
          <s:GradientEntry color="0xBBD982" ratio="0" />
          <s:GradientEntry color="0xFFFFFF" ratio="1" />
        </s:entries>
      </s:LinearGradient>
    </s:fill>
      <s:stroke><s:SolidColorStroke weight="1.5" color="0x71924B" /></s:stroke>
    </s:Ellipse>
    
    <bpmn:BPMNIcon styleName="{hostComponent.trigger + 'Trigger'}"
      filled="false" closedStrokeColor="0x71924B" openStrokeColor="0x71924B"
      verticalCenter="{hostComponent.trigger == 'Timer' ? 0 : 0}"
      horizontalCenter="{hostComponent.trigger == 'Timer' ? 0 : 0}"/>
 
  </s:Group>




  <s:Group id="labelsGroup">
    <s:Label id="labelElement" text="{hostComponent.label}" maxWidth="{hostComponent.maxWidth}" textAlign="center" color="{color}" fontSize="12"/>
  </s:Group>
  
</ibm:NodeSkinBase>
